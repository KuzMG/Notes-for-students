<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>418</width>
    <height>318</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="minimumSize">
   <size>
    <width>418</width>
    <height>318</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QWidget" name="widget" native="true">
   <property name="geometry">
    <rect>
     <x>9</x>
     <y>9</y>
     <width>400</width>
     <height>300</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QWidget#widget {
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 60, 0, 255), stop:1 rgba(0, 90, 0, 255));
border-radius: 15px;
}
QComboBox {
    border-radius: 6px;
	font-size: 14px;
	padding: 3px 0px3px 5px;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background-color: rgb(255, 255, 255);
	padding-left: 2px;
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background-color:rgb(206, 206, 206);
	border-bottom-left-radius: 0px;
	border-bottom-right-radius: 0px;
}

QComboBox:on { /* shift the text when the popup opens */
    	padding-left: 2px;
		padding-top: 2px;
}

QComboBox::drop-down {
	width: 25px;
    border-left-style: None;
}

QComboBox::down-arrow {
    image: url(res/image/comboBoxArrowDown.png);
	padding-right: 5px;
	padding-left: 5px;
}
QComboBox::down-arrow:on {
 image: url(res/image/comboBoxArrowUp.png);
}</string>
   </property>
   <widget class="QPushButton" name="closeButton">
    <property name="geometry">
     <rect>
      <x>360</x>
      <y>0</y>
      <width>40</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Segoe MDL2 Assets</family>
      <pointsize>18</pointsize>
      <weight>50</weight>
      <bold>false</bold>
      <stylestrategy>PreferAntialias</stylestrategy>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">#closeButton{
color: rgb(255, 255, 255);
background-color:rgba(255, 255, 255, 0);
}
#closeButton:hover{
color: rgb(0, 0, 0);
background-color: rgba(218, 218, 218, 50);
border-radius: 0;
border-bottom-left-radius: 15;
border-top-right-radius: 15
}</string>
    </property>
    <property name="text">
     <string></string>
    </property>
   </widget>
   <widget class="QPushButton" name="okButton">
    <property name="geometry">
     <rect>
      <x>140</x>
      <y>250</y>
      <width>121</width>
      <height>31</height>
     </rect>
    </property>
    <property name="sizePolicy">
     <sizepolicy hsizetype="Minimum" vsizetype="Ignored">
      <horstretch>0</horstretch>
      <verstretch>16</verstretch>
     </sizepolicy>
    </property>
    <property name="font">
     <font>
      <family>Myanmar Text</family>
      <pointsize>10</pointsize>
      <weight>50</weight>
      <italic>false</italic>
      <bold>false</bold>
      <underline>false</underline>
      <strikeout>false</strikeout>
      <stylestrategy>PreferAntialias</stylestrategy>
     </font>
    </property>
    <property name="layoutDirection">
     <enum>Qt::LeftToRight</enum>
    </property>
    <property name="autoFillBackground">
     <bool>false</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">#okButton
{
background-color: rgb(0,100, 0);
border-radius: 15;
color: rgb(217, 217, 217);
border: 2px solid rgb(255, 255, 255);
text-align: center;
}
#okButton:hover{
background-color: rgb(0, 85, 0);
border-radius: 15;
color: rgb(0, 0, 0);
border: 1px solid rgb(255, 255, 255);
min-width:  100px;
max-width:  100px;
min-height: 35px;
max-height: 35px;
}
#okButton:pressed{
background-color: rgb(0, 70, 0);
border-radius: 15;
color: rgb(0, 0, 0);
border: 1px solid rgb(255, 255, 255);
min-width:  100px;
max-width:  100px;
min-height: 35px;
max-height: 35px;
}</string>
    </property>
    <property name="text">
     <string>OK</string>
    </property>
   </widget>
   <widget class="QWidget" name="layoutWidget">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>50</y>
      <width>401</width>
      <height>191</height>
     </rect>
    </property>
    <layout class="QVBoxLayout" name="verticalLayout" stretch="0,0,0,0,0">
     <property name="spacing">
      <number>0</number>
     </property>
     <property name="sizeConstraint">
      <enum>QLayout::SetNoConstraint</enum>
     </property>
     <property name="leftMargin">
      <number>50</number>
     </property>
     <property name="rightMargin">
      <number>50</number>
     </property>
     <item>
      <widget class="QComboBox" name="comboBoxQualif">
       <property name="autoFillBackground">
        <bool>false</bool>
       </property>
       <property name="styleSheet">
        <string notr="true"/>
       </property>
       <property name="editable">
        <bool>false</bool>
       </property>
       <property name="currentIndex">
        <number>-1</number>
       </property>
       <property name="maxVisibleItems">
        <number>9</number>
       </property>
       <property name="insertPolicy">
        <enum>QComboBox::InsertAtBottom</enum>
       </property>
       <property name="sizeAdjustPolicy">
        <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
       </property>
       <property name="duplicatesEnabled">
        <bool>false</bool>
       </property>
       <property name="frame">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QComboBox" name="comboBoxInst">
       <property name="styleSheet">
        <string notr="true">background-color: rgb(255, 255, 255);</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QComboBox" name="comboBoxLocation">
       <property name="styleSheet">
        <string notr="true">background-color: rgb(255, 255, 255);</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QComboBox" name="comboBoxCourse">
       <property name="styleSheet">
        <string notr="true">background-color: rgb(255, 255, 255);</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QComboBox" name="comboBoxGroup">
       <property name="styleSheet">
        <string notr="true">background-color: rgb(255, 255, 255);</string>
       </property>
      </widget>
     </item>
    </layout>
   </widget>
   <widget class="QPushButton" name="backButton">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>40</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Segoe MDL2 Assets</family>
      <pointsize>18</pointsize>
      <weight>50</weight>
      <bold>false</bold>
      <stylestrategy>PreferAntialias</stylestrategy>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">#backButton{
color: rgb(255, 255, 255);
background-color:rgba(255, 255, 255, 0);
}
#backButton:hover{
color: rgb(0, 0, 0);
background-color: rgba(218, 218, 218, 50);
border-radius: 0;
border-top-left-radius: 15;
border-bottom-right-radius: 15
}</string>
    </property>
    <property name="text">
     <string></string>
    </property>
   </widget>
  </widget>
 </widget>
 <resources>
  <include location="../res/image/comboBoxArrow.qrc"/>
 </resources>
 <connections/>
</ui>
